name: Build and Push K8s Images

on:
  push:
    tags:
      - 'v*'

jobs:
  export-images:
    runs-on: ubuntu-latest
    permissions:
      # 用于发布 release
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Extract version from tag
        id: version
        run: echo "K8S_VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install containerd
        run: |
          sudo apt-get update
          sudo apt-get install -y containerd

          sudo mkdir -p /etc/containerd
          sudo containerd config default | sudo tee /etc/containerd/config.toml
          
          sudo systemctl restart containerd
          sudo systemctl enable containerd

      - name: Install kubeadm
        run: |
          K8S_VERSION_NUM=${K8S_VERSION#v}
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl
          sudo echo "deb [trusted=yes] https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list > /dev/null
          sudo apt-get update --allow-unauthenticated
          # 获取完整版本号
          DEB_KUBEADM_VERSION=$(apt-cache madison kubeadm | grep ${K8S_VERSION_NUM} | head -n1 | awk '{print $3}')
          if [ -z "$DEB_KUBEADM_VERSION" ]; then
            echo "❌ kubeadm version ${K8S_VERSION_NUM} not found!"
            exit 1
          fi
          sudo apt-get install -y kubeadm=$DEB_KUBEADM_VERSION kubelet=$DEB_KUBEADM_VERSION kubectl=$DEB_KUBEADM_VERSION--allow-unauthenticated

      - name: Save images to tarball
        run: |
          # 获取所有的镜像列表
          IMAGES=$(sudo kubeadm config images list --kubernetes-version $K8S_VERSION)
          # 定义压缩文件名
          FILE="k8s-${K8S_VERSION}-amd64.tar.gz"
          # 拉取镜像
          for img in $IMAGES; do
            sudo ctr images pull $img
          done
          # 保存镜像
          sudo ctr images export $FILE $IMAGES
          echo "ARCHIVE_NAME=$FILE" >> $GITHUB_ENV

      - name: Upload image archive to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ARCHIVE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}